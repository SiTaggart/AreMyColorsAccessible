// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`hsl-slider compact variant should render a compact variant 1`] = `
.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 0;
  width: 100%;
}

@media (min-width: 1024px) {
  .emotion-2 {
    -webkit-flex: 1 0 auto;
    -ms-flex: 1 0 auto;
    flex: 1 0 auto;
  }
}

.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  text-align: left;
}

.emotion-6 {
  display: inline-block;
  font-size: 1rem;
  margin-bottom: 0;
  width: 100%;
}

.emotion-8 {
  -webkit-flex: 6;
  -ms-flex: 6;
  flex: 6;
}

.emotion-10 {
  -webkit-appearance: none;
  background: transparent;
  border-radius: 2px;
  color: currentColor;
  display: block;
  margin: 10px 0;
  width: 100%;
}

.emotion-10::-webkit-slider-runnable-track {
  width: 100%;
  height: 4px;
  cursor: pointer;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  box-shadow: 0 0 0 #fff,0 0 0 #fff;
  background: currentColor;
  border: 1px solid currentColor;
  border-radius: 5px;
}

.emotion-10::-webkit-slider-thumb {
  box-shadow: 1px 1px 1px #999,0 0 1px #a6a6a6;
  border: 1px solid currentColor;
  height: 20px;
  width: 8px;
  border-radius: 2px;
  background: currentColor;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -9px;
}

.emotion-10:focus::-webkit-slider-runnable-track {
  background: currentColor;
}

.emotion-10::-moz-range-track {
  width: 100%;
  height: 4px;
  cursor: pointer;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  box-shadow: 0 0 0 #fff,0 0 0 #fff;
  background: currentColor;
  border: 1px solid currentColor;
  border-radius: 5px;
}

.emotion-10::-moz-range-thumb {
  box-shadow: 1px 1px 1px #999,0 0 1px #a6a6a6;
  border: 1px solid currentColor;
  height: 20px;
  width: 8px;
  border-radius: 2px;
  background: currentColor;
  cursor: pointer;
}

.emotion-10::-ms-track {
  width: 100%;
  height: 4px;
  cursor: pointer;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  background: transparent;
  border-color: transparent;
  border-width: 8px 0;
  color: transparent;
}

.emotion-10::-ms-fill-lower {
  box-shadow: 0 0 0 #fff,0 0 0 #fff;
  background: currentColor;
  border: 1px solid currentColor;
  border-radius: 5px * 2;
}

.emotion-10::-ms-fill-upper {
  box-shadow: 0 0 0 #fff,0 0 0 #fff;
  background: currentColor;
  border: 1px solid currentColor;
  border-radius: 5px * 2;
}

.emotion-10::-ms-thumb {
  box-shadow: 1px 1px 1px #999,0 0 1px #a6a6a6;
  border: 1px solid currentColor;
  height: 20px;
  width: 8px;
  border-radius: 2px;
  background: currentColor;
  cursor: pointer;
}

.emotion-10:focus::-ms-fill-lower {
  background: currentColor;
}

.emotion-10:focus::-ms-fill-upper {
  background: currentColor;
}

<div
  className="emotion-0 emotion-1"
  data-testid="form-hsl-sliders"
>
  <div
    className="emotion-2 emotion-3"
  >
    <div
      className="emotion-4 emotion-5"
    >
      <label
        className="emotion-6 emotion-7"
        htmlFor="input-id-Hue"
      >
        H
      </label>
    </div>
    <div
      className="emotion-8 emotion-9"
    >
      <input
        className="emotion-10 emotion-11"
        data-testid="input-id-Hue"
        id="input-id-Hue"
        max={360}
        min={0}
        onChange={[Function]}
        onInput={[Function]}
        type="range"
        value={0}
      />
    </div>
  </div>
  <div
    className="emotion-2 emotion-3"
  >
    <div
      className="emotion-4 emotion-5"
    >
      <label
        className="emotion-6 emotion-7"
        htmlFor="input-id-Saturation"
      >
        S
      </label>
    </div>
    <div
      className="emotion-8 emotion-9"
    >
      <input
        className="emotion-10 emotion-11"
        data-testid="input-id-Saturation"
        id="input-id-Saturation"
        max={100}
        min={0}
        onChange={[Function]}
        onInput={[Function]}
        type="range"
        value={0}
      />
    </div>
  </div>
  <div
    className="emotion-2 emotion-3"
  >
    <div
      className="emotion-4 emotion-5"
    >
      <label
        className="emotion-6 emotion-7"
        htmlFor="input-id-Lightness"
      >
        L
      </label>
    </div>
    <div
      className="emotion-8 emotion-9"
    >
      <input
        className="emotion-10 emotion-11"
        data-testid="input-id-Lightness"
        id="input-id-Lightness"
        max={100}
        min={0}
        onChange={[Function]}
        onInput={[Function]}
        type="range"
        value={80}
      />
    </div>
  </div>
</div>
`;

exports[`hsl-slider renders without crashing 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

@media (min-width: 1024px) {
  .emotion-0 {
    margin: 0 -0.5rem;
  }
}

.emotion-2 {
  width: 100%;
}

@media (min-width: 1024px) {
  .emotion-2 {
    -webkit-flex: 1 0 auto;
    -ms-flex: 1 0 auto;
    flex: 1 0 auto;
    padding: 0 0.5rem;
    width: 33.3333%;
  }
}

.emotion-6 {
  display: inline-block;
  font-size: 1.2rem;
  margin-bottom: 0.5rem;
  width: 100%;
}

.emotion-10 {
  -webkit-appearance: none;
  background: transparent;
  border-radius: 2px;
  color: currentColor;
  display: block;
  margin: 10px 0;
  width: 100%;
}

.emotion-10::-webkit-slider-runnable-track {
  width: 100%;
  height: 4px;
  cursor: pointer;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  box-shadow: 0 0 0 #fff,0 0 0 #fff;
  background: currentColor;
  border: 1px solid currentColor;
  border-radius: 5px;
}

.emotion-10::-webkit-slider-thumb {
  box-shadow: 1px 1px 1px #999,0 0 1px #a6a6a6;
  border: 1px solid currentColor;
  height: 20px;
  width: 8px;
  border-radius: 2px;
  background: currentColor;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -9px;
}

.emotion-10:focus::-webkit-slider-runnable-track {
  background: currentColor;
}

.emotion-10::-moz-range-track {
  width: 100%;
  height: 4px;
  cursor: pointer;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  box-shadow: 0 0 0 #fff,0 0 0 #fff;
  background: currentColor;
  border: 1px solid currentColor;
  border-radius: 5px;
}

.emotion-10::-moz-range-thumb {
  box-shadow: 1px 1px 1px #999,0 0 1px #a6a6a6;
  border: 1px solid currentColor;
  height: 20px;
  width: 8px;
  border-radius: 2px;
  background: currentColor;
  cursor: pointer;
}

.emotion-10::-ms-track {
  width: 100%;
  height: 4px;
  cursor: pointer;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  background: transparent;
  border-color: transparent;
  border-width: 8px 0;
  color: transparent;
}

.emotion-10::-ms-fill-lower {
  box-shadow: 0 0 0 #fff,0 0 0 #fff;
  background: currentColor;
  border: 1px solid currentColor;
  border-radius: 5px * 2;
}

.emotion-10::-ms-fill-upper {
  box-shadow: 0 0 0 #fff,0 0 0 #fff;
  background: currentColor;
  border: 1px solid currentColor;
  border-radius: 5px * 2;
}

.emotion-10::-ms-thumb {
  box-shadow: 1px 1px 1px #999,0 0 1px #a6a6a6;
  border: 1px solid currentColor;
  height: 20px;
  width: 8px;
  border-radius: 2px;
  background: currentColor;
  cursor: pointer;
}

.emotion-10:focus::-ms-fill-lower {
  background: currentColor;
}

.emotion-10:focus::-ms-fill-upper {
  background: currentColor;
}

<div
  className="emotion-0 emotion-1"
  data-testid="form-hsl-sliders"
>
  <div
    className="emotion-2 emotion-3"
  >
    <div
      className="emotion-4 emotion-5"
    >
      <label
        className="emotion-6 emotion-7"
        htmlFor="input-id-Hue"
      >
        Hue 0Â°
      </label>
    </div>
    <div
      className="emotion-8 emotion-9"
    >
      <input
        className="emotion-10 emotion-11"
        data-testid="input-id-Hue"
        id="input-id-Hue"
        max={360}
        min={0}
        onChange={[Function]}
        onInput={[Function]}
        type="range"
        value={0}
      />
    </div>
  </div>
  <div
    className="emotion-2 emotion-3"
  >
    <div
      className="emotion-4 emotion-5"
    >
      <label
        className="emotion-6 emotion-7"
        htmlFor="input-id-Saturation"
      >
        Saturation 0%
      </label>
    </div>
    <div
      className="emotion-8 emotion-9"
    >
      <input
        className="emotion-10 emotion-11"
        data-testid="input-id-Saturation"
        id="input-id-Saturation"
        max={100}
        min={0}
        onChange={[Function]}
        onInput={[Function]}
        type="range"
        value={0}
      />
    </div>
  </div>
  <div
    className="emotion-2 emotion-3"
  >
    <div
      className="emotion-4 emotion-5"
    >
      <label
        className="emotion-6 emotion-7"
        htmlFor="input-id-Lightness"
      >
        Lightness 80%
      </label>
    </div>
    <div
      className="emotion-8 emotion-9"
    >
      <input
        className="emotion-10 emotion-11"
        data-testid="input-id-Lightness"
        id="input-id-Lightness"
        max={100}
        min={0}
        onChange={[Function]}
        onInput={[Function]}
        type="range"
        value={80}
      />
    </div>
  </div>
</div>
`;
