name: Checks

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.16.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build
      - name: Run bundlewatch
        run: yarn run bundlewatch
        env:
          BUNDLEWATCH_GITHUB_TOKEN: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
          CI_REPO_OWNER: SiTaggart
          CI_REPO_NAME: AreMyColorsAccessible
          CI_COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          CI_BRANCH: ${{ github.ref }}
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.16.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run eslint
        run: yarn lint
      - name: Run type-check
        run: yarn tsc
  cypress:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.16.1]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Percy Test
        uses: percy/exec-action@v0.3.0
        with:
          command: "cypress:ci"
          verbose: true
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
  # cypress:
  #   runs-on: ubuntu-latest
  #   container: cypress/browsers:node12.6.0-chrome75
  #   strategy:
  #     matrix:
  #       node-version: [12.16.x]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v1
  #     - name: Get yarn cache
  #       id: yarn-cache
  #       run: echo "::set-output name=dir::$(yarn cache dir)"
  #     - uses: actions/cache@v1
  #       with:
  #         path: ${{ steps.yarn-cache.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile
  #     - name: Run cypress
  #       run: yarn cypress:ci
  #       env:
  #         PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
  jest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12.6.1"
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - run: node -v
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: node -v
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run jest
        run: yarn jest
